import markups
from states.template.UserState import UserState
from states.template.Response import Response
import config_controller
import utils.ScannerCode as Scan
from db.controllers.GoodsController import GoodsController
import asyncio

class ScannerState(UserState):
    async def start_msg(self):
        if self.message_obj.content_type == "photo":
            file = await self.bot.get_file(self.message_obj.photo[-1].file_id)
            file_bytes = await self.bot.download_file(file.file_path)
            code = Scan.get_code_from_bytes_image(file_bytes)
            if code is not None:
                goods = GoodsController()
                tovar = await goods.get_by(code=code)
                if len(tovar) == 0:
                    return Response(text="–ù–∞–∂–∞–ª—å, —Ü—å–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–º–∞—î —É —Å–ø–∏—Å–∫—É –∫–µ—à–±–µ–∫—Éüò¢", is_end=True)
                else:
                    tovar = tovar[0]
                    return Response(
                        text= f"–®—Ç—Ä–∏—Ö-–∫–æ–¥: {tovar.code}\n"
                              f"–ù–∞–∑–≤–∞: {tovar.name}\n"
                              f"–ë—Ä–µ–Ω–¥: {tovar.brend}\n",
                        is_end = True
                    )
            else:
                return Response(text="–•–∞–ª–µ–ø–∞! –ù–µ–≤–¥–∞–ª–æ—Å—è –≤—ñ–¥—Å–∫–∞–Ω—É–≤–∞—Ç–∏ —à—Ç—Ä–∏—Ö-–∫–æ–¥!\n"
                                     "–°–ø—Ä–æ–±—É–π—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ –±—ñ–ª—å—à —è–∫—ñ—Å–Ω—ñ—à–µ —Ñ–æ—Ç–æ —á–∏ –≤–≤–µ–¥—ñ—Ç—å —à—Ç—Ä–∏—Ö-–∫–æ–¥ –≤—Ä—É—á–Ω—É", is_end=True)

        elif self.message_obj.content_type == "text":
            text = self.message_obj.text
            goods = GoodsController()
            if text.isdigit():
                code = text
                tovar = await goods.get_by(code=code)
                if len(tovar) == 0:
                    return Response(text="–ù–∞–∂–∞–ª—å, —Ü—å–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–º–∞—î —É —Å–ø–∏—Å–∫—É –∫–µ—à–±–µ–∫—Éüò¢", is_end=True)
                else:
                    tovar = tovar[0]
                    return Response(
                        text= f"–®—Ç—Ä–∏—Ö-–∫–æ–¥: {tovar.code}\n"
                              f"–ù–∞–∑–≤–∞: {tovar.name}\n"
                              f"–ë—Ä–µ–Ω–¥: {tovar.brend}\n",
                        is_end = True
                    )
            else:
                tovar = await goods.get_by(name=text)
                if len(tovar) == 0:
                    return Response(text="–ù–∞–∂–∞–ª—å, —Ü—å–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ–º–∞—î —É —Å–ø–∏—Å–∫—É –∫–µ—à–±–µ–∫—Éüò¢", is_end=True)
                else:
                    text_tovar = f"–ë—É–ª–æ –∑–Ω–∞–∏ÃÜ–¥–µ–Ω–æ {len(tovar)} —Ç–æ–≤–∞—Ä—ñ–≤\n\n"
                    while True:
                        for _ in range(5):
                            if len(tovar) == 0:
                                await self.bot.send_message(chat_id=self.user_chat_id, text=text_tovar)
                                break
                            text_tovar += (f"–®—Ç—Ä–∏—Ö-–∫–æ–¥: {tovar[0].code}\n"
                                           f"–ù–∞–∑–≤–∞: {tovar[0].name}\n"
                                           f"–ë—Ä–µ–Ω–¥: {tovar[0].brend}\n\n")
                            del tovar[0]
                        await self.bot.send_message(chat_id=self.user_chat_id, text=text_tovar)
                        text_tovar = ""
                        await asyncio.sleep(2)

        elif self.message_obj.content_type == "video":
            return Response(text="–í—ñ–¥–µ–æ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—èüò¢\n"
                                 "–ö—Ä–∞—â–µ —Ñ–æ—Ç–æ –∞–±–æ —Ç–µ–∫—Å—Ç–æ–ºüôÇ", is_end=True)
        else:
            return Response(text="–û—Ç —Ö–∞–ª–µ–ø–∞! –©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫üò¢\n"
                                 "–°–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ñ–æ—Ç–æ —à—Ç—Ä–∏—Ö-–∫–æ–¥—É, –∞–±–æ –∂ –≤–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É —á–∏ —à—Ç—Ä–∏—Ö-–∫–æ–¥", is_end=True)
